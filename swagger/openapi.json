{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger documentation - About you test task",
        "description": "A sample API that serves the test task",
        "contact": {
            "name": "Mohammad Nourinik",
            "email": "enourinick@gmail.com",
            "url": "http://github.com/enourinick"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8008/api"
        }
    ],
    "paths": {
        "/user": {
            "get": {
                "tags": [
                    "User opearions"
                ],
                "description": "Returns all users.",
                "operationId": "IndexUsers",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Response content type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUser"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Register"
                ],
                "description": "Register a new user",
                "operationId": "StoreUser",
                "parameters": [
                    {
                        "name": "Content-type",
                        "in": "header",
                        "description": "Response content type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Accept",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New user basic information.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntity"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You should send a valid header to do this."
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "tags": [
                    "Login"
                ],
                "description": "Login via password grant",
                "operationId": "Current authenticated user.",
                "parameters": [
                    {
                        "name": "Content-type",
                        "in": "header",
                        "description": "Response content type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Accept",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New user basic information.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "client_secret": {
                                        "type": "string",
                                        "description": "Your client secret"
                                    },
                                    "grant_type": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "admin@aboutyou.de"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token and refresh token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "31622400"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "refresh_token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "unsupported_grant_type"
                                        },
                                        "error_description": {
                                            "type": "string",
                                            "example": "The authorization grant type is not supported by the authorization server."
                                        },
                                        "hint": {
                                            "type": "string",
                                            "example": "Check that all required parameters have been provided"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The authorization grant type is not supported by the authorization server."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "User opearions"
                ],
                "description": "Returns the current authenticated user",
                "operationId": "get-current-authenticated-user.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User opearions"
                ],
                "description": "Update the current authenticated user",
                "operationId": "update user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "New user basic information.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntity"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You should send a valid header to do this."
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/multiply": {
            "post": {
                "tags": [
                    "Matrix operations"
                ],
                "description": "Multiply two matrices.",
                "operationId": "multiply",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Two matrices",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "matrix1",
                                    "matrix2"
                                ],
                                "properties": {
                                    "matrix1": {
                                        "$ref": "#/components/schemas/Matrix"
                                    },
                                    "matrix2": {
                                        "$ref": "#/components/schemas/Matrix"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Result of multiplication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Matrix"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "A validation error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntity"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You should send a valid header to do this."
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "NewUser": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "example": "email@aboutyou.de"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    }
                }
            },
            "User": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "example": "email@domain.com"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2019-11-09 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2019-11-09 12:00:00"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "example": "2019-11-09 12:00:00"
                    }
                }
            },
            "PaginatedUser": {
                "required": [
                    "current_page",
                    "data",
                    "first_page_url",
                    "from",
                    "last_page",
                    "last_page_url",
                    "path",
                    "per_page",
                    "to",
                    "total"
                ],
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/User"
                                }
                            ]
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UnauthorizedError": {
                "required": [
                    "message"
                ],
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "invalid_client"
                    },
                    "documentation_url": {
                        "type": "string",
                        "example": "https://developer.github.com/v3/gists/#create-a-gist\""
                    },
                    "message": {
                        "type": "string",
                        "example": "Requires authentication"
                    }
                }
            },
            "UnprocessableEntity": {
                "required": [
                    "errors",
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "email": [
                                "The email has already been taken."
                            ]
                        }
                    }
                }
            },
            "Matrix": {
                "type": "array",
                "items": {
                    "anyOf": [
                        {
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "number",
                                        "example": 1
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    }
}
